import React, { useState } from "react";
import axios from "axios";
import ReactMarkdown from "react-markdown";
import { Analytics } from '@vercel/analytics/react'; 
import "./App.css";

function App() {
  const [file, setFile] = useState(null);
  const [text, setText] = useState("");
  const [error, setError] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [isModalOpen, setIsModalOpen] = useState(true);

  const handleFileChange = (e) => {
    setFile(e.target.files[0]);
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    const formData = new FormData();
    formData.append("file", file);
    setIsLoading(true); // Start loading

    try {
      const response = await axios.post(
        "https://goldfish-app-nvg3l.ondigitalocean.app/upload",
        formData,
        {
          headers: {
            "Content-Type": "multipart/form-data",
          },
        }
      );
      setText(response.data);
      setError("");
    } catch (err) {
      setText("");
      setError("Error uploading or parsing PDF");
    }
    setIsLoading(false); // Stop loading
  };
  const handleCloseModal = () => {
    setIsModalOpen(false);
  };

  return (
    <div className="App">
      <h1>AI Resume RoasterðŸ’¼</h1>
      <h3>Want to get roasted and get opinion, you are at right place ðŸ¥´</h3>
      <form onSubmit={handleSubmit}>
        <input
          type="file"
          onChange={handleFileChange}
          accept="application/pdf"
          required
        />
        {isLoading ? (
          <button type="submit" disabled>
            <i className="fa fa-spinner fa-spin"></i> Uploading...
          </button>
        ) : (
          <button type="submit">Upload</button>
        )}
      </form>
      {error && <p className="error">{error}</p>}
      <div className="markdown">
        <ReactMarkdown>{text}</ReactMarkdown>
      </div>
      <footer>
      {isModalOpen && (
        <div className="modal">
          <div className="modal-content">
          <h2>Important Disclaimer</h2>
            <p>
              The content generated by this AI is for informational purposes only and may contain inaccuracies or offensive material. 
              AI models are not perfect and may produce unexpected or inappropriate results. Users are advised to critically evaluate the 
              information and use it responsibly. We disclaim any liability for any harm or damages resulting from the use of the AI-generated content.
            </p>
            <p>
              Additionally, please note that the uploaded files are automatically deleted from our servers as soon as the data is extracted. 
              We do not store any uploaded files after processing to ensure your privacy and data security.
            </p>
            <button onClick={handleCloseModal}>I Understand</button>
          </div>
        </div>
      )}
      </footer>
      <Analytics />
    </div>
  );
}

export default App;
